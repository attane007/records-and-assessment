# Example backend environment variables
# Copy to .env (or .env.local) and provide real values. Do NOT commit real secrets.

# MongoDB connection string (replace with your credentials)
MONGO_URI=mongodb+srv://<username>:<password>@cluster0.example.mongodb.net/<dbname>

# Application port
PORT=8080

# Database name
DB_NAME=ppk_pp1_records

# Optional: default admin credentials for development (do not commit real secrets)
# Backend reads these to initialize a default admin user if none exists.
ADMIN_USER=admin
ADMIN_PASS=admin123

# Gmail service account configuration (preferred for Google Workspace with domain-wide delegation)
# Steps:
# 1. Create a service account in Google Cloud Console and enable Domain-wide Delegation (DWD) in the Admin Console.
# 2. Grant the service account the Gmail send scope (https://www.googleapis.com/auth/gmail.send) via Admin -> Security -> API controls -> Domain-wide delegation.
# 3. Download the service account JSON key file and set its path (or paste the raw JSON) into GMAIL_SERVICE_ACCOUNT_JSON.
# 4. Set GMAIL_DELEGATE_EMAIL to the user to impersonate (must be in the same Workspace domain).
# 5. Set NOTIFY_TO to the recipient address for notifications.
#
# DO NOT commit the service account key to version control. Use a secrets manager in production.

# Service account JSON (path to file or the raw JSON content)
GMAIL_SERVICE_ACCOUNT_JSON=record-and-assetment.json

# The user to impersonate (must be allowed via domain-wide delegation)
GMAIL_DELEGATE_EMAIL=poramin@ppks.ac.th

# Recipient for notifications
NOTIFY_TO=poramin@ppks.ac.th
